From: Ahmad Fatoum <a.fatoum@pengutronix.de>
Date: Mon, 11 Jul 2022 15:15:54 +0200
Subject: [PATCH] kbuild: gen-dtb-s: refactor to allow different compression
 methods

We unconditonally use LZO for __dtb_z symbols when
CONFIG_USE_COMPRESSED_DTB=y. Refactor the code to allow different
compression methods. The immediate benefit is allowing LZ4 as an
alternative, as lzop is dormant and in future, we may want to reuse the
same compression method used for barebox proper for the device tree as
well.

Signed-off-by: Ahmad Fatoum <a.fatoum@pengutronix.de>
---
 common/Kconfig       | 10 ++++++++++
 scripts/Makefile.lib |  2 +-
 scripts/gen-dtb-s    | 20 ++++++++++++++++++--
 3 files changed, 29 insertions(+), 3 deletions(-)

diff --git a/common/Kconfig b/common/Kconfig
index 02380c3098ae..fa5314f7b15d 100644
--- a/common/Kconfig
+++ b/common/Kconfig
@@ -41,6 +41,16 @@ config BLOCK
 config BLOCK_WRITE
 	bool
 
+config USE_COMPRESSED_DTB
+	bool
+	depends on ARM || RISCV
+	select UNCOMPRESS
+	select LZO_DECOMPRESS if DTB_COMPRESSION = "lzo"
+
+config DTB_COMPRESSION
+	string
+	default "lzo"
+
 config FILETYPE
 	bool
 
diff --git a/scripts/Makefile.lib b/scripts/Makefile.lib
index 85d18f07a2b6..fef2b6188acd 100644
--- a/scripts/Makefile.lib
+++ b/scripts/Makefile.lib
@@ -353,7 +353,7 @@ endif
 
 # Generate an assembly file to wrap the output of the device tree compiler
 quiet_cmd_dt_S_dtb = DTB     $@
-cmd_dt_S_dtb = $(srctree)/scripts/gen-dtb-s $(subst -,_,$(*F)) $< $(CONFIG_IMD) > $@
+cmd_dt_S_dtb = $(srctree)/scripts/gen-dtb-s $(subst -,_,$(*F)) $< $(CONFIG_IMD) $(CONFIG_DTB_COMPRESSION) > $@
 $(obj)/%.dtb.S: $(obj)/%.dtb $(obj)/%.dtb.z $(srctree)/scripts/gen-dtb-s FORCE
 	$(call if_changed,dt_S_dtb)
 
diff --git a/scripts/gen-dtb-s b/scripts/gen-dtb-s
index c5c46a4d8675..eda52aac1600 100755
--- a/scripts/gen-dtb-s
+++ b/scripts/gen-dtb-s
@@ -3,6 +3,7 @@
 name=$1
 dtb=$2
 imd=$3
+compression=$4
 
 echo "#include <asm/barebox.lds.h>"
 
@@ -51,7 +52,22 @@ echo "__dtb_${name}_end:"
 echo ".global __dtb_${name}_end"
 echo ".balign STRUCT_ALIGNMENT"
 
-compressed=$(${CONFIG_SHELL} "${srctree}/scripts/file-size.sh" $dtb.z)
+case $compression in
+	none)
+		exit 0
+		;;
+	lzo)
+		lzop -f -9 $dtb -o $dtb.$compression
+		;;
+	*)
+		echo Unsupported compression algorithm: $compression >&2
+		exit 1
+		;;
+esac
+if [ $? != 0 ]; then
+	exit 1
+fi
+compressed=$(${CONFIG_SHELL} "${srctree}/scripts/file-size.sh" $dtb.$compression)
 uncompressed=$(${CONFIG_SHELL} "${srctree}/scripts/file-size.sh" $dtb)
 
 echo "#if defined(CONFIG_USE_COMPRESSED_DTB) && defined(__PBL__)"
@@ -62,7 +78,7 @@ echo "__dtb_z_${name}_start:"
 printf ".int 0x%08x\n"  0x7b66bcbd
 printf ".int 0x%08x\n"  $compressed
 printf ".int 0x%08x\n"  $uncompressed
-echo ".incbin \"$dtb.z\""
+echo ".incbin \"$dtb.$compression\""
 echo "__dtb_z_${name}_end:"
 echo ".global __dtb_z_${name}_end"
 echo ".balign STRUCT_ALIGNMENT"
