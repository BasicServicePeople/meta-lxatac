From: Ahmad Fatoum <a.fatoum@pengutronix.de>
Date: Fri, 4 Mar 2022 08:27:42 +0100
Subject: [PATCH] of: implement of_append_property

barebox TLVs can be fixed up into a device tree for OS consumption. In
case of repeated TLVs, we will want barebox to append onto an existing
property. Add a helper that facilitates this.

Signed-off-by: Ahmad Fatoum <a.fatoum@pengutronix.de>
---
 drivers/of/base.c | 36 ++++++++++++++++++++++++++++++++++++
 include/of.h      |  8 ++++++++
 2 files changed, 44 insertions(+)

diff --git a/drivers/of/base.c b/drivers/of/base.c
index 83291c4785af..a219055d9b83 100644
--- a/drivers/of/base.c
+++ b/drivers/of/base.c
@@ -2321,6 +2321,42 @@ int of_set_property(struct device_node *np, const char *name, const void *val, i
 	return 0;
 }
 
+int of_append_property(struct device_node *np, const char *name, const void *val, int len)
+{
+	struct property *pp;
+	void *buf = NULL;
+	int orig_len = 0;
+
+	if (!np)
+		return -ENOENT;
+
+	pp = of_find_property(np, name, NULL);
+	if (pp) {
+		buf = pp->value;
+		orig_len = pp->length;
+	}
+
+	buf = realloc(buf, orig_len + len);
+	if (!buf)
+		return -ENOMEM;
+
+	memcpy(buf + orig_len, val, len);
+
+	if (pp) {
+		pp->value = buf;
+		pp->length += len;
+
+		if (pp->value_const) {
+			memcpy(buf, pp->value_const, orig_len);
+			pp->value_const = NULL;
+		}
+	} else {
+		pp = __of_new_property(np, name, buf, len);
+	}
+
+	return 0;
+}
+
 int of_property_sprintf(struct device_node *np,
 			const char *propname, const char *fmt, ...)
 {
diff --git a/include/of.h b/include/of.h
index 7644d5db3fef..eacb15fa7859 100644
--- a/include/of.h
+++ b/include/of.h
@@ -130,6 +130,8 @@ extern struct device_node *of_get_cpu_node(int cpu, unsigned int *thread);
 
 extern int of_set_property(struct device_node *node, const char *p,
 			const void *val, int len, int create);
+extern int of_append_property(struct device_node *np, const char *p,
+			      const void *val, int len);
 extern struct property *of_new_property(struct device_node *node,
 				const char *name, const void *data, int len);
 extern struct property *of_new_property_const(struct device_node *node,
@@ -505,6 +507,12 @@ static inline int of_set_property(struct device_node *node, const char *p,
 	return -ENOSYS;
 }
 
+static inline int of_append_property(struct device_node *np, const char *p,
+				      const void *val, int len)
+{
+	return -ENOSYS;
+}
+
 static inline struct property *of_new_property(struct device_node *node,
 				const char *name, const void *data, int len)
 {
